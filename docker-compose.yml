version: "3.9"

# Services
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: --configFile=/etc/traefik/traefik.yml
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml

  ticket-service:
    build: ./ticket-service
    volumes:
      - ./ticket-service:/app
      - /app/node_modules
    labels:
      - "traefik.http.routers.ticket-service.rule=Host(`api.ticket-service.localhost`)"
      - "traefik.http.routers.ticket-service.entrypoints=web"
    hostname: api.ticket-service.docker-compose
    environment:
      - DATABASE_URL=postgresql://ticket-user:ticket-password@ticket-database.docker-compose:5432/ticket
    depends_on:
      - ticket-database

  ticket-database:
    image: postgres:16.0
    restart: always
    volumes:
      - ticket-database:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=ticket-user
      - POSTGRES_PASSWORD=ticket-password
      - POSTGRES_DB=ticket
    hostname: ticket-database.docker-compose

  ticket-pdf:
    build: ./ticket-pdf
    labels:
      - "traefik.http.routers.ticket-pdf.rule=Host(`cdn.ticket-pdf.localhost`)"
      - "traefik.http.routers.ticket-pdf.entrypoints=web"
    hostname: cdn.ticket-pdf.docker-compose

  client-service:
    build: ./client-service
    volumes:
      - ./client-service:/app
    labels:
      - "traefik.http.routers.client-service.rule=Host(`api.client-service.localhost`)"
      - "traefik.http.routers.client-service.entrypoints=web"
    environment:
      - DATABASE_URL=postgresql://client-user:client-password@client-database.docker-compose:5432/client
    hostname: api.client-service.docker-compose
    depends_on:
      - client-database

  client-database:
    image: postgres:16.0
    restart: always
    volumes:
      - client-database:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=client-user
      - POSTGRES_PASSWORD=client-password
      - POSTGRES_DB=client
    hostname: client-database.docker-compose

  payment-service:
    build: ./payment-service
    ports:
      - "3002:3002"
    labels:
      - "traefik.http.routers.payment-service.rule=Host(`api.payment-service.localhost`)"
      - "traefik.http.routers.payment-service.entrypoints=web"
    volumes:
      - ./payment-service:/app
    environment:
      - REDIS_HOST=redis.docker-compose
      - REDIS_PORT=6379
      - REDIS_CHANNEL=payment
      - MONGO_HOST=payment-database.docker-compose
      - MONGO_PORT=27017
    hostname: api.payment-service.docker-compose
    depends_on:
      - payment-database
      - redis

  payment-database:
    image: mongo
    restart: always
    ports:
      - "27018:27017"
    hostname: payment-database.docker-compose

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - "6380:6379"
    hostname: redis.docker-compose

# Volumes
volumes:
  ticket-database:
    driver: local
  client-database:
    driver: local
  payment-database:
    driver: local
  redis:
    driver: local
